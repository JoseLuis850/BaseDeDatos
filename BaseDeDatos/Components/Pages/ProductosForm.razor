@page "/productos/nuevo"
@page "/productos/editar/{ID:int}"
@rendermode InteractiveServer

@inject NavigationManager _navigator;
@inject IRepositorioProductos _repositorio;

<h2>@_mensaje Producto</h2>

<EditForm Model="_producto" FormName="frmProducto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_producto.Nombre" />
            <ValidationMessage For="()=>_producto.Nombre" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtPrecio" class="col-2 col-form-label">Precio</label>
        <div class="col-10">
            <InputNumber id="txtPrecio" class="form-control" @bind-Value="_producto.Precio" />
            <ValidationMessage For="()=>_producto.Precio" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtCantidad" class="col-2 col-form-label">Cantidad</label>
        <div class="col-10">
            <InputNumber id="txtCantidad" class="form-control" @bind-Value="_producto.Cantidad" />
            <ValidationMessage For="()=>_producto.Cantidad" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtCaducidad" class="col-2 col-form-label">Fecha Caducidad</label>
        <div class="col-10">
            <InputDate id="txtCaducidad" class="form-control" @bind-Value="_producto.FechaCaducidad" />
            <ValidationMessage For="()=>_producto.FechaCaducidad" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="txtProveedor" class="col-2 col-form-label">Proveedor</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_producto.ProveedorID">
                <option value="0">Seleccione el proveedor</option>
                @foreach (var proveedor in _proveedores)
                {
                    <option value="@proveedor.ID">@proveedor.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>_producto.ProveedorID" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>

</EditForm>

@code {
    [Parameter]
    public int ID { get; set; }
    private string _mensaje = "";
    private Producto _producto = new Producto();
    private List<Proveedor> _proveedores = new();

    protected override async Task OnInitializedAsync()
    {
        _proveedores = await _repositorio.GetProveedores();
        if (ID > 0)
        {
            _producto = await _repositorio.Get(ID);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nuevo";
        }
    }

    private async void Guardar()
    {
        if (ID > 0)
        {
            await _repositorio.Update(ID, _producto!);
        }
        else
        {
            await _repositorio.Add(_producto!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/productos");
    }
}